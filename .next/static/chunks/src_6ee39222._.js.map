{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/joaosantos/Documents/Tutoring/src/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\n\n// Define a function to create a Supabase client for browser environments\nexport function createClient() {\n  // Ensure the environment variables are loaded\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing Supabase URL or Anon Key in environment variables.');\n  }\n\n  // Create and return the Supabase client\n  // We use createBrowserClient for client-side usage.\n  // For server-side usage (API routes, Server Components), we'd use createServerClient.\n  return createBrowserClient(\n    supabaseUrl,\n    supabaseAnonKey\n  );\n} "],"names":[],"mappings":";;;AAKsB;AALtB;AAAA;;AAGO,SAAS;IACd,8CAA8C;IAC9C,MAAM;IACN,MAAM;IAEN,uCAAsC;;IAEtC;IAEA,wCAAwC;IACxC,oDAAoD;IACpD,sFAAsF;IACtF,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD,EACvB,aACA;AAEJ","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/joaosantos/Documents/Tutoring/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Session, User } from '@supabase/supabase-js';\nimport { createClient } from '@/lib/supabase/client';\n\n// Define the shape of our profile data\nexport interface UserProfile {\n  id: string;\n  name: string | null;\n  role: 'STUDENT' | 'TUTOR' | null;\n  avatar_url: string | null;\n  // Add other profile fields as needed\n}\n\n// Define the shape of our context data\ninterface AuthContextType {\n  session: Session | null;\n  user: User | null;\n  profile: UserProfile | null;\n  loading: boolean;\n  signOut: () => Promise<void>;\n}\n\n// Create the context with a default value\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Export the provider component\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const supabase = createClient();\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    console.log(\"AuthContext: useEffect started.\"); // Log start\n\n    // Function to fetch session and profile\n    const fetchSessionAndProfile = async () => {\n      console.log(\"AuthContext: fetchSessionAndProfile started.\");\n      setLoading(true); // Ensure loading is true at the start\n      setError(null); // Assuming you might add an error state\n\n      try {\n        console.log(\"AuthContext: Fetching session...\");\n        const { data: { session: currentSession }, error: sessionError } = await supabase.auth.getSession();\n        console.log(\"AuthContext: Session data:\", currentSession);\n        if (sessionError) {\n          console.error(\"AuthContext: Error fetching session:\", sessionError);\n          setSession(null);\n          setUser(null);\n          setProfile(null);\n          // No return here, let finally handle loading state\n          console.error(\"ERRORRRR\");\n\n        } else {\n          console.log(\"AuthContext: Session fetched:\", currentSession);\n          setSession(currentSession);\n          setUser(currentSession?.user ?? null);\n\n          if (currentSession?.user) {\n            console.log(\"AuthContext: User found in session, fetching profile for ID:\", currentSession.user.id);\n            const { data: profileData, error: profileError } = await supabase\n              .from('profiles')\n              .select('*')\n              .eq('id', currentSession.user.id)\n              .maybeSingle(); // Use maybeSingle() instead of single()\n\n            if (profileError) {\n              console.error(\"ERRORRRR\");\n              setProfile(null);\n\n              if (profileError.code !== 'PGRST116') {\n                  console.error(\"ERRORRRR\");\n              }\n            } else {\n              console.log(\"AuthContext: Profile fetched:\", profileData);\n              setProfile(profileData); // profileData will be null if no row found, which is fine\n            }\n          } else {\n            console.log(\"AuthContext: No user in session, setting profile to null.\");\n            setProfile(null); // No user, no profile\n          }\n        }\n      } catch (err: any) {\n          console.error(\"AuthContext: Error in fetchSessionAndProfile try block:\", err);\n          // Reset states on catch\n          setSession(null);\n          setUser(null);\n          setProfile(null);\n      } finally {\n        console.log(\"AuthContext: fetchSessionAndProfile finally block reached. Setting loading to false.\");\n        setLoading(false); // Set loading false regardless of success/error\n      }\n    };\n\n    fetchSessionAndProfile();\n\n    // Listen for auth state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (_event, newSession) => {\n        console.log(\"AuthContext: onAuthStateChange triggered. Event:\", _event);\n        console.log(\"AuthContext: New session:\", newSession);\n        setSession(newSession);\n        setUser(newSession?.user ?? null);\n\n        if (newSession?.user) {\n           console.log(\"AuthContext: User found in new session, fetching profile for ID:\", newSession.user.id);\n           try {\n              // Fetch profile data again on auth change\n              const { data: profileData, error: profileError } = await supabase\n                 .from('profiles')\n                 .select('*')\n                 .eq('id', newSession.user.id)\n                 .maybeSingle(); // Use maybeSingle() here too\n\n              if (profileError) {\n                console.error(\"AuthContext: Error fetching profile on auth change:\", profileError);\n                setProfile(null);\n              } else {\n                console.log(\"AuthContext: Profile fetched on auth change:\", profileData);\n                setProfile(profileData);\n                console.log(\"AuthContext: Reached point AFTER profile fetch attempt in onAuthStateChange.\"); \n              }\n           } catch (profileFetchError) {\n              console.error(\"AuthContext: Uncaught error fetching profile on auth change:\", profileFetchError);\n              setProfile(null);\n           }\n        } else {\n            console.log(\"AuthContext: No user in new session, setting profile to null.\");\n            setProfile(null);\n        }\n        // Explicitly set loading false AFTER state updates from auth change? Usually not needed.\n        // console.log(\"AuthContext: onAuthStateChange finished, setting loading false.\"); \n        // setLoading(false); \n      }\n    );\n\n    // Cleanup listener on unmount\n    return () => {\n      console.log(\"AuthContext: Unsubscribing from auth changes.\");\n      // Access the subscription property inside data\n      authListener?.data?.subscription?.unsubscribe();\n    };\n  }, [supabase]); // Dependency array includes supabase client\n\n  const signOut = async () => {\n    setLoading(true);\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      console.error(\"Error signing out:\", error);\n    }\n    // State updates will be handled by onAuthStateChange listener\n    // setLoading(false); // Listener will reset loading potentially\n  };\n\n  const value = {\n    session,\n    user,\n    profile,\n    loading,\n    signOut,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\n// Export a hook to easily use the context\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/joaosantos/Documents/Tutoring/src/components/layout/dashboard-layout.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useAuth, AuthProvider } from \"@/context/AuthContext\";\nimport { Menu, X } from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode;\n}\n\nfunction DashboardLayoutInternal({ children }: { children: React.ReactNode }) {\n  const pathname = usePathname();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const { profile, signOut, loading } = useAuth();\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center min-h-screen\"><p>Loading...</p></div>;\n  }\n\n  if (!profile || !profile.role) {\n    return <div className=\"flex items-center justify-center min-h-screen\"><p>Error loading profile data.</p></div>;\n  }\n\n  const userRole = profile.role;\n\n  const studentNavItems = [\n    { href: \"/dashboard/student\", label: \"Overview\" },\n    { href: \"/dashboard/student/sessions\", label: \"My Sessions\" },\n    { href: \"/dashboard/student/tutors\", label: \"My Tutors\" },\n    { href: \"/dashboard/student/exercises\", label: \"Exercises\" },\n    { href: \"/dashboard/student/documents\", label: \"Documents\" },\n  ];\n\n  const tutorNavItems = [\n    { href: \"/dashboard/tutor\", label: \"Overview\" },\n    { href: \"/dashboard/tutor/sessions\", label: \"Sessions\" },\n    { href: \"/dashboard/tutor/students\", label: \"Students\" },\n    { href: \"/dashboard/tutor/exercises\", label: \"Exercises\" },\n    { href: \"/dashboard/tutor/documents\", label: \"Documents\" },\n  ];\n\n  const navItems = userRole === \"STUDENT\" ? studentNavItems : tutorNavItems;\n\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\n\n  const handleSignOut = async () => {\n    await signOut();\n  };\n\n  return (\n    <div className=\"min-h-screen flex\">\n      {isSidebarOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/50 z-40 lg:hidden\"\n          onClick={toggleSidebar}\n        />\n      )}\n\n      <aside\n        className={`\n          fixed lg:static inset-y-0 left-0 z-50 w-64 transform \n          ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n          lg:translate-x-0 transition-transform duration-200 ease-in-out\n          bg-background border-r p-4\n        `}\n      >\n        <div className=\"flex flex-col h-full\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"p-2\">\n              <h2 className=\"text-lg font-semibold\">TutorHub</h2>\n              <p className=\"text-sm text-muted-foreground\">\n                {userRole === \"STUDENT\" ? \"Student Dashboard\" : \"Tutor Dashboard\"}\n              </p>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"lg:hidden\"\n              onClick={toggleSidebar}\n            >\n              <X className=\"h-6 w-6\" />\n            </Button>\n          </div>\n          <nav className=\"space-y-1 flex-1\">\n            {navItems.map((item) => (\n              <Button\n                key={item.href}\n                variant={pathname === item.href ? \"secondary\" : \"ghost\"}\n                className=\"w-full justify-start cursor-pointer\"\n                asChild\n                onClick={() => setIsSidebarOpen(false)}\n              >\n                <Link href={item.href}>{item.label}</Link>\n              </Button>\n            ))}\n          </nav>\n          <div className=\"mt-auto pt-4\">\n            <Button\n              variant=\"ghost\"\n              className=\"w-full justify-start cursor-pointer\"\n              onClick={handleSignOut}\n            >\n              Sign Out\n            </Button>\n          </div>\n        </div>\n      </aside>\n\n      <div className=\"flex-1 flex flex-col min-h-screen\">\n        <header className=\"lg:hidden border-b p-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold\">TutorHub</h2>\n            <Button variant=\"ghost\" size=\"icon\" onClick={toggleSidebar} className=\"cursor-pointer\">\n              <Menu className=\"h-6 w-6\" />\n            </Button>\n          </div>\n        </header>\n\n        <main className=\"flex-1 p-4 lg:p-8\">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport function DashboardLayout({ children }: DashboardLayoutProps) {\n  return (\n    <AuthProvider>\n      <DashboardLayoutInternal>{children}</DashboardLayoutInternal>\n    </AuthProvider>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///Users/joaosantos/Documents/Tutoring/src/components/layout/dashboard-wrapper.tsx"],"sourcesContent":["\"use client\";\n\nimport { DashboardLayout } from \"./dashboard-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\nimport { GraduationCap, User } from \"lucide-react\";\n\ninterface DashboardWrapperProps {\n  children: React.ReactNode;\n}\n\nexport function DashboardWrapper({ children }: DashboardWrapperProps) {\n  const [userRole, setUserRole] = useState<\"STUDENT\" | \"TUTOR\">(\"TUTOR\");\n\n  const toggleRole = () => {\n    setUserRole(prevRole => prevRole === \"TUTOR\" ? \"STUDENT\" : \"TUTOR\");\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <div className=\"fixed top-4 right-4 z-50\">\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"bg-background/80 backdrop-blur-sm border-primary/20 hover:bg-primary/10 cursor-pointer\"\n          onClick={toggleRole}\n        >\n          {userRole === \"TUTOR\" ? (\n            <>\n              <User className=\"h-5 w-5\" />\n              Switch to Student View\n            </>\n          ) : (\n            <>\n              <GraduationCap className=\"h-5 w-5\" />\n              Switch to Tutor View\n            </>\n          )}\n        </Button>\n      </div>\n      <DashboardLayout userRole={userRole}>\n        {children}\n      </DashboardLayout>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;;;AALA;;;;;AAWO,SAAS,iBAAiB,EAAE,QAAQ,EAAyB;;IAClE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAE9D,MAAM,aAAa;QACjB,YAAY,CAAA,WAAY,aAAa,UAAU,YAAY;IAC7D;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,WAAU;oBACV,SAAS;8BAER,aAAa,wBACZ;;0CACE,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAY;;qDAI9B;;0CACE,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;0BAM7C,6LAAC,sJAAA,CAAA,kBAAe;gBAAC,UAAU;0BACxB;;;;;;;;;;;;AAIT;GAlCgB;KAAA","debugId":null}}]
}