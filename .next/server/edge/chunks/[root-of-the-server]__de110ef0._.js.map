{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  let response = NextResponse.next({\n    request: {\n      headers: request.headers,\n    },\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return request.cookies.get(name)?.value\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          request.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n        },\n        remove(name: string, options: CookieOptions) {\n          request.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n        },\n      },\n    }\n  )\n\n  // Refresh session if expired - required for Server Components\n  // https://supabase.com/docs/guides/auth/auth-helpers/nextjs#managing-session-with-middleware\n  const { data: { session } } = await supabase.auth.getSession()\n\n  // Define protected routes\n  const protectedRoutes = ['/dashboard']; // Add more routes/patterns as needed\n  const pathname = request.nextUrl.pathname;\n\n  // If user is not logged in and trying to access a protected route, redirect to login\n  if (!session && protectedRoutes.some(route => pathname.startsWith(route))) {\n    const redirectUrl = request.nextUrl.clone()\n    redirectUrl.pathname = '/login'\n    // Optionally add a query param to redirect back after login\n    // redirectUrl.searchParams.set(`redirectedFrom`, pathname)\n    return NextResponse.redirect(redirectUrl)\n  }\n\n  // If user is logged in and trying to access login/register, redirect to dashboard\n  if (session && (pathname === '/login' || pathname === '/register')) {\n    const redirectUrl = request.nextUrl.clone()\n    redirectUrl.pathname = '/dashboard'\n    return NextResponse.redirect(redirectUrl)\n  }\n\n  return response\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * Feel free to modify this pattern to include more exceptions.\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n    // Add specific routes needing protection/redirection if matcher isn't enough\n    '/dashboard/:path*',\n    '/login',\n    '/register',\n  ],\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,IAAI,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;YACP,SAAS,QAAQ,OAAO;QAC1B;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,sUAGhC;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO;YACpC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA;oBACA,GAAG,OAAO;gBACZ;gBACA,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA;oBACA,GAAG,OAAO;gBACZ;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;gBACA,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;YACF;QACF;IACF;IAGF,8DAA8D;IAC9D,6FAA6F;IAC7F,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAE5D,0BAA0B;IAC1B,MAAM,kBAAkB;QAAC;KAAa,EAAE,qCAAqC;IAC7E,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IAEzC,qFAAqF;IACrF,IAAI,CAAC,WAAW,gBAAgB,IAAI,CAAC,CAAA,QAAS,SAAS,UAAU,CAAC,SAAS;QACzE,MAAM,cAAc,QAAQ,OAAO,CAAC,KAAK;QACzC,YAAY,QAAQ,GAAG;QACvB,4DAA4D;QAC5D,2DAA2D;QAC3D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,kFAAkF;IAClF,IAAI,WAAW,CAAC,aAAa,YAAY,aAAa,WAAW,GAAG;QAClE,MAAM,cAAc,QAAQ,OAAO,CAAC,KAAK;QACzC,YAAY,QAAQ,GAAG;QACvB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;QACA,6EAA6E;QAC7E;QACA;QACA;KACD;AACH"}}]
}