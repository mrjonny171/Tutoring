{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\n// This function can be marked `async` if using `await` inside\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl\n\n  // Check if the request is for the base dashboard path\n  if (pathname === '/dashboard') {\n    // Determine the default role-specific path\n    // TODO: Ideally, determine the actual user role here (e.g., from session, cookie)\n    const defaultRolePath = '/dashboard/tutor' // Defaulting to tutor for now\n\n    // Clone the URL and change the pathname\n    const url = request.nextUrl.clone()\n    url.pathname = defaultRolePath\n\n    console.log(`Middleware: Redirecting ${pathname} to ${url.pathname}`); // For debugging\n\n    // Redirect to the role-specific path\n    return NextResponse.redirect(url)\n  }\n\n  // Allow other requests to proceed\n  return NextResponse.next()\n}\n\n// See \"Matching Paths\" below to learn more\nexport const config = {\n  // Match only the exact /dashboard path\n  matcher: '/dashboard',\n} "],"names":[],"mappings":";;;;AAAA;AAAA;;AAIO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,sDAAsD;IACtD,IAAI,aAAa,cAAc;QAC7B,2CAA2C;QAC3C,kFAAkF;QAClF,MAAM,kBAAkB,mBAAmB,8BAA8B;;QAEzE,wCAAwC;QACxC,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QAEf,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,SAAS,IAAI,EAAE,IAAI,QAAQ,EAAE,GAAG,gBAAgB;QAEvF,qCAAqC;QACrC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,kCAAkC;IAClC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,uCAAuC;IACvC,SAAS;AACX"}}]
}